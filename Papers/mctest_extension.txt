Machine Comprehension with Syntax, Frames, and Semantics
http://ttic.uchicago.edu/~mbansal/papers/acl15_machineComprehension.pdf

"Demonstrate significant improvement by augmenting baseline features with features based on syntax, frame semantics, coreference and word embeddings and combining them in a max-margin learning framework"

Recent question answering systems have focused on open-domain factoid questions
	- Ferrucci et al., 2010; Berant et al., 2013; Bordes et al., 2014
	- Relied on knowledge bases like Freebase (Bollacker et al., 2008)

Paper focuses on MACHINE COMPREHENSION
	- Answers are contained within a provided passage

MODEL
- Used a simple latent-variable classifier trained with a max-margin criterion
	- Use a linear model that uses a latent varible to identify the sentence in the passage in which the asnwer can be found

FEATURES
1) Weighted word overlap between question-answer bag of words and bag of words in the ?window?
2) Minimal distance between two word occurrences in the passage that are also contained in the question/answer pair
3) Frame Semantic Features (section 3.1)
	- Extracts "frame-specific predicate-argument structures from sentences"
		- Checks wherether frame, argument labels match and whether the target matchest etc.
	- Uses an inventory such as FrameNet (http://dl.acm.org/citation.cfm?id=980860)
4) Syntactic Features (section 3.2) 
	- Use rules to transform the question-answer into a statement
		- See paper for specific rules
		- Extract the dependency between child word and head word, POS tags, the wh-word in the question and the root word in the dependency tree
	- After the transformation, measure dependency-based similarity 
5) Word Embeddings (Section 3.3)
	- I don't really know how these work
6) Coreference Resolution (Section 3.4)
	- Run coreference on each passage
	- Integreate it into features 1, 3 and 4
	- Exact string match <=> membership in same coreference chain
	- Concatenate new features with old features

Sometimes use two sets of features - one version with just the question and one with the question and answer


IMPLEMENTATION NOTES:
Merge train and development sets in MC160 and MC500 and split them into 250-story train and 200-story dev set

Use SEMAFOR for frame semantic parsing
Use Stanford (Chen and Manning 2014) for dependency parsing
Use Stanford (Lee et al 2013) coreference system
Use pre-trained 300-dimensional word embeddings downloading from word2vec site (https://code.google.com/p/word2vec/)
Used miniFunc MATLAB package to minimize loss

ERRORS OF THIS SYSTEM
- Answers that require multiple sentences to answer
- Answers that require (basic) real world knowledge/temporal reasoning
- Comparitive reasoning/negation

OTHER PAPERS ON SAME DATASET:
1) http://people.csail.mit.edu/karthikn/pdfs/mcdr15.pdf
2) http://research.microsoft.com/en-us/um/people/mattri/papers/AnswerEntailing_ACL2015.pdf